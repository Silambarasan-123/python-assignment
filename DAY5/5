class Solution(object):
    def removeInvalidParentheses(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        def helper(open_brace, close_brace, results, reverse):            
            count = {open_brace: 0, close_brace: 0}
            removed = 0
            for i in range(len(s)):
                c = s[-(i+1)] if reverse else s[i]
                if c == close_brace and count[open_brace] == count[close_brace]:
                    new_results = set()
                    for result in results:
                        if reverse:
                            r = range(len(result) - (i - removed + 1), len(result))
                        else:
                            r = range(i - removed + 1)
                
                        for j in r:
                            if result[j] == close_brace:
                                new_results.add(result[:j] + result[j + 1:])
                    results = new_results
                    removed += 1
                elif c in count:
                        count[c] += 1
            return results

        results = {s}
        results = helper("(", ")", results, False)
        results = helper(")", "(", results, True)
        return list(results)
